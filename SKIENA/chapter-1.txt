

Problem vs Instance
Problem = the general goal
Instance = specific example of a goal

TSP/Traveling Salesman Problem

Nearest Neighbour -> less optimal because of potential "zig zag"

Connect Pair -> Pair points that are the closest, gradually connect small cluster
potentially can connect across row creating a "tangled" route

Perfect algorithm -> Brute Force

_____________________

Interval scheduling Problem

stop and think: incremental correctnes

problem: prove correctness of the following alg for incrementing natural number
y -> y + 1

increment(y)
    if y = 0 then return (1)
        if (y mod 2) = 1 then ; if its an even number
            reutrn (2 . increment(floor(y/2)))
        else return (y+1) ; if its an odd number, increase y by 1


base case: when y reaches 0, return 1
how about if its a negative integer?
does it termintae?

if case -> y mod 2 = 1
recurse with new y = floor(y/2) . 2
else increment y by 1

case where its odd
let y = 3
2 . increment(floor(3/2))
2 . increment(1)
then inside increment(1)
2 . increment(floor(1/2))
2 . increment(0)
2 . 2 . 1 = 4

case where its even
just increse it by 1
let y = 2
return y + 1 -> 3, which is true even for any even numbers

base: y = 0, increment by 1 which is 1 so correct
assume: assume it works for all values less than n
prove: therefore works for y = n

floor(y/2) -> remove the last binary digit (right shift)
11 (3) -> 1 (1)
101 (5) -> 10 (2)

2 . x -> add 0 to the end in binary
10 (2) -> 100 (4)
11 (3) -> 110 (6)

y = 2m+1

increment(2m+1) -> 
2 . increment(floor(y/2)) -> 2 . increment(floor(2m+1/2)) -> 2 . increment(m)

IH -> increment(m) = m+1

2 . (m+1) = 2m + 2 -> (2m+1) + 1 = y + 1

_______________________

stop and think: factorial formulae

problem: prove that summation from i=1 to n of i * i! = (n+1)! - 1 by induction


base: n=1
sum from i = 1 to 1 of 1 * 1! = 1
(n+1)! - 1 = 2! - 1 = 2.1 - 1 = 1
they are equal

n = 2
2 * 2! + 1 * 1! = 2 * 2 + 1 = 5
3! - 1 = 5
they are equal

seems to be true for smaller base case

assume: it works for some n = k
by the definition of factorial n! = n . n-1!
Sk = (k+1)! - 1 -> IH

prove: it must then work for n = k + 1
Sk+1 = Sk + k+1 * k+1!
Sk+1 = (k+1)! - 1 + k+1 * k+1!
sk+1 = k+1! (1 + k+1) - 1
sk+1 = k+1! (k+2) - 1
sk+1 = k+2! - 1


_____________________
Modeling means turning a messy real-world problem into a clean math or logic problem that we already understand.

permutation problm
what order should i do these things?
- robot tour
- sorting
- scheduling

subsets problem
which items should i choose?
order doesn't matter
- choosing members
- movie scheduling

Tree Problem
hierarchical parent/child relationship
- company orgs chart
- file system
- decision tree
- family tree
- categories, subcategories

graphs problem
anything connected to anything else
- road maps
- social network
- computer networ

points problem
- location in space
- location on map
-stars in astronomy

strings problem
- dna seq
- text docs


_____________________

Exercises

1-1
show that a+b can be less than min(a,b)

lets pick a small example
let a = -1
let b = -2

a+b = -1 -2 = -3
min(a,b) = min(-1,-2) = -2

-3 < -2? true
therefore shown

1-2 show that axb can be less than min(a,b)


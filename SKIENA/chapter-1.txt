

Problem vs Instance
Problem = the general goal
Instance = specific example of a goal

TSP/Traveling Salesman Problem

Nearest Neighbour -> less optimal because of potential "zig zag"

Connect Pair -> Pair points that are the closest, gradually connect small cluster
potentially can connect across row creating a "tangled" route

Perfect algorithm -> Brute Force

_____________________

Interval scheduling Problem

stop and think: incremental correctnes

problem: prove correctness of the following alg for incrementing natural number
y -> y + 1

increment(y)
    if y = 0 then return (1)
        if (y mod 2) = 1 then ; if its an even number
            reutrn (2 . increment(floor(y/2)))
        else return (y+1) ; if its an odd number, increase y by 1


base case: when y reaches 0, return 1
how about if its a negative integer?
does it termintae?

if case -> y mod 2 = 1
recurse with new y = floor(y/2) . 2
else increment y by 1

case where its odd
let y = 3
2 . increment(floor(3/2))
2 . increment(1)
then inside increment(1)
2 . increment(floor(1/2))
2 . increment(0)
2 . 2 . 1 = 4

case where its even
just increse it by 1
let y = 2
return y + 1 -> 3, which is true even for any even numbers

base: y = 0, increment by 1 which is 1 so correct
assume: for given integer y, increments +1
prove: for every integer, always increment by 1

floor(y/2) -> remove the last binary digit (right shift)
11 (3) -> 1 (1)
101 (5) -> 10 (2)

2 . x -> add 0 to the end in binary
10 (2) -> 100 (4)
11 (3) -> 110 (6)